@inproceedings{He:2018:DPD,
 author = {He, Jingxuan and Ivanov, Pesho and Tsankov, Petar and Raychev, Veselin and Vechev, Martin},
 title = {Debin: Predicting Debug Information in Stripped Binaries},
 booktitle = {Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security},
 series = {CCS '18},
 year = {2018},
 isbn = {978-1-4503-5693-0},
 location = {Toronto, Canada},
 pages = {1667--1680},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/3243734.3243866},
 doi = {10.1145/3243734.3243866},
 acmid = {3243866},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {binary code, debug information, machine learning, security},
}

@inproceedings{Brumley:2011:BBA:2032305.2032342,
 author = {Brumley, David and Jager, Ivan and Avgerinos, Thanassis and Schwartz, Edward J.},
 title = {BAP: A Binary Analysis Platform},
 booktitle = {Proceedings of the 23rd International Conference on Computer Aided Verification},
 series = {CAV'11},
 year = {2011},
 isbn = {978-3-642-22109-5},
 location = {Snowbird, UT},
 pages = {463--469},
 numpages = {7},
 url = {http://dl.acm.org/citation.cfm?id=2032305.2032342},
 acmid = {2032342},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@article{Geurts:2006:ERT:1132034.1132040,
 author = {Geurts, Pierre and Ernst, Damien and Wehenkel, Louis},
 title = {Extremely Randomized Trees},
 journal = {Mach. Learn.},
 issue_date = {April     2006},
 volume = {63},
 number = {1},
 month = apr,
 year = {2006},
 issn = {0885-6125},
 pages = {3--42},
 numpages = {40},
 url = {http://dx.doi.org/10.1007/s10994-006-6226-1},
 doi = {10.1007/s10994-006-6226-1},
 acmid = {1132040},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
 keywords = {Bias/variance tradeoff, Cut-point randomization, Decision and regression trees, Ensemble methods, Kernel-based models, Supervised learning},
} 

@inproceedings{Lafferty:2001:CRF:645530.655813,
 author = {Lafferty, John D. and McCallum, Andrew and Pereira, Fernando C. N.},
 title = {Conditional Random Fields: Probabilistic Models for Segmenting and Labeling Sequence Data},
 booktitle = {Proceedings of the Eighteenth International Conference on Machine Learning},
 series = {ICML '01},
 year = {2001},
 isbn = {1-55860-778-1},
 pages = {282--289},
 numpages = {8},
 url = {http://dl.acm.org/citation.cfm?id=645530.655813},
 acmid = {655813},
 publisher = {Morgan Kaufmann Publishers Inc.},
 address = {San Francisco, CA, USA},
}

@article{Breiman:2001:RF:570181.570182,
 author = {Breiman, Leo},
 title = {Random Forests},
 journal = {Mach. Learn.},
 issue_date = {October 1 2001},
 volume = {45},
 number = {1},
 month = oct,
 year = {2001},
 issn = {0885-6125},
 pages = {5--32},
 numpages = {28},
 url = {https://doi.org/10.1023/A:1010933404324},
 doi = {10.1023/A:1010933404324},
 acmid = {570182},
 publisher = {Kluwer Academic Publishers},
 address = {Norwell, MA, USA},
 keywords = {classification, ensemble, regression},
} 
@INPROCEEDINGS{Frey98factorgraphs,
    author = {Brendan J. Frey and Frank R. Kschischang and Hans-andrea Loeliger and Niclas Wiberg},
    title = {Factor Graphs and Algorithms},
    booktitle = {Proc. 35th Allerton Conf. on Communications, Control, and Computing, (Allerton},
    year = {1998},
    pages = {666--680}
}
@misc{DWARF,
  title = {The DWARF Debugging Standard},
  howpublished = {\url{http://dwarfstd.org/}},
  note = {Accessed:2019-06-10}
}
@misc{json,
  title = {Java Script Object Notation, JSON},
  howpublished = {\url{https://www.json.org/}},
  note = {Accessed:2019-07-07}
}
@misc{pyelftools,
  title = {pyelftools},
  howpublished = {\url{https://github.com/eliben/pyelftools}},
  note = {Accessed:2019-07-07}
}
@misc{Nice2Predict,
  title = {Nice2Predict},
  howpublished = {\url{http://nice2predict.org/}},
  note = {Accessed:2019-06-11}
}
@misc{elfio,
  title = {ELFIO, library for reading and generating ELF files},
  howpublished = {\url{http://elfio.sourceforge.net/}},
  note = {Accessed:2019-07-07}
}
@misc{gdb,
  title = {GDB: The GNU Project Debugger},
  howpublished = {\url{https://www.gnu.org/software/gdb/}},
  note = {Accessed:2019-07-14}
}
@misc{ida-pro,
  title = {IDA-Pro},
  howpublished = {\url{https://www.hex-rays.com/}},
  note = {Accessed:2019-07-14}
}
@misc{ghidra,
  title = {Ghidra},
  howpublished = {\url{https://ghidra-sre.org/}},
  note = {Accessed:2019-07-14}
}
@misc{virus-share,
  title = {Virus Share},
  howpublished = {\url{https://virusshare.com/}},
  note = {Accessed:2019-07-14}
}
@inproceedings{Bao:2014:BLR:2671225.2671279,
 author = {Bao, Tiffany and Burket, Jonathan and Woo, Maverick and Turner, Rafael and Brumley, David},
 title = {BYTEWEIGHT: Learning to Recognize Functions in Binary Code},
 booktitle = {Proceedings of the 23rd USENIX Conference on Security Symposium},
 series = {SEC'14},
 year = {2014},
 isbn = {978-1-931971-15-7},
 location = {San Diego, CA},
 pages = {845--860},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=2671225.2671279},
 acmid = {2671279},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
} 
@article{Cytron:1991:ECS:115372.115320,
 author = {Cytron, Ron and Ferrante, Jeanne and Rosen, Barry K. and Wegman, Mark N. and Zadeck, F. Kenneth},
 title = {Efficiently Computing Static Single Assignment Form and the Control Dependence Graph},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {Oct. 1991},
 volume = {13},
 number = {4},
 month = oct,
 year = {1991},
 issn = {0164-0925},
 pages = {451--490},
 numpages = {40},
 url = {http://doi.acm.org/10.1145/115372.115320},
 doi = {10.1145/115372.115320},
 acmid = {115320},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {control dependence, control flow graph, def-use chain, dominator, optimizing compilers},
} 
@article{Sutton:2012:ICR:2688180.2688181,
 author = {Sutton, Charles and McCallum, Andrew},
 title = {An Introduction to Conditional Random Fields},
 journal = {Found. Trends Mach. Learn.},
 issue_date = {April 2012},
 volume = {4},
 number = {4},
 month = apr,
 year = {2012},
 issn = {1935-8237},
 pages = {267--373},
 numpages = {107},
 url = {http://dx.doi.org/10.1561/2200000013},
 doi = {10.1561/2200000013},
 acmid = {2688181},
 publisher = {Now Publishers Inc.},
 address = {Hanover, MA, USA},
} 
@article{lee2011tie,
  title={TIE: Principled reverse engineering of types in binary programs},
  author={Lee, JongHyup and Avgerinos, Thanassis and Brumley, David},
  year={2011}
}
@article{elwazeer2013scalable,
  title={Scalable variable and data type detection in a binary rewriter},
  author={ElWazeer, Khaled and Anand, Kapil and Kotha, Aparna and Smithson, Matthew and Barua, Rajeev},
  journal={ACM SIGPLAN Notices},
  volume={48},
  number={6},
  pages={51--60},
  year={2013},
  publisher={ACM}
}
@article{scikit-learn,
 title={{Scikit-learn: Machine Learning in Python }},
 author={Pedregosa, F. and Varoquaux, G. and Gramfort, A. and Michel, V.
         and Thirion, B. and Grisel, O. and Blondel, M. and Prettenhofer, P.
         and Weiss, R. and Dubourg, V. and Vanderplas, J. and Passos, A. and
         Cournapeau, D. and Brucher, M. and Perrot, M. and Duchesnay, E.},
 journal={Journal of Machine Learning Research},
 volume={12},
 pages={2825--2830},
 year={2011}
}
@inproceedings{Schwartz:2013:NDU:2534766.2534797,
 author = {Schwartz, Edward J. and Lee, JongHyup and Woo, Maverick and Brumley, David},
 title = {Native x86 Decompilation Using Semantics-preserving Structural Analysis and Iterative Control-flow Structuring},
 booktitle = {Proceedings of the 22Nd USENIX Conference on Security},
 series = {SEC'13},
 year = {2013},
 isbn = {978-1-931971-03-4},
 location = {Washington, D.C.},
 pages = {353--368},
 numpages = {16},
 url = {http://dl.acm.org.eaccess.ub.tum.de/citation.cfm?id=2534766.2534797},
 acmid = {2534797},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
} 
@techreport{caballero2009binary,
  title={Binary code extraction and interface identification for security applications},
  author={Caballero, Juan and Johnson, Noah M and McCamant, Stephen and Song, Dawn},
  year={2009},
  institution={CALIFORNIA UNIV BERKELEY DEPT OF ELECTRICAL ENGINEERING AND COMPUTER SCIENCE}
}
@inproceedings{haller2013mempick,
  title={Mempick: High-level data structure detection in c/c++ binaries},
  author={Haller, Istvan and Slowinska, Asia and Bos, Herbert},
  booktitle={2013 20th Working Conference on Reverse Engineering (WCRE)},
  pages={32--41},
  year={2013},
  organization={IEEE}
}
@InProceedings{TypeMiner-10.1007/978-3-030-22038-9_14,
  author="Maier, Alwin
  and Gascon, Hugo
  and Wressnegger, Christian
  and Rieck, Konrad",
  title="TypeMiner: Recovering Types in Binary Programs Using Machine Learning",
  booktitle="Detection of Intrusions and Malware, and Vulnerability Assessment",
  year="2019",
  publisher="Springer International Publishing",
  address="Cham",
  pages="288--308",
  abstract="Closed-source software is a major hurdle for assessing the security of computer systems. In absence of source code, it is particularly difficult to locate vulnerabilities and malicious functionality, as crucial information is removed by the compilation process. Most notably, binary programs usually lack type information, which complicates spotting vulnerabilities such as integer flaws or type confusions dramatically. Moreover, data types are often essential for gaining a deeper understanding of the program logic. In this paper we present TypeMiner, a static method for recovering types in binary programs. We build on the assumption that types leave characteristic traits in compiled code that can be automatically identified using machine learning starting at usage locations determined by an analyst. We evaluate the performance of our method with 14Â real world software projects written in C and show that it is able to correctly recover the data types in 76--93 of the cases.",
  isbn="978-3-030-22038-9"
}

@inproceedings{Bichsel:2016:SDA:2976749.2978422,
 author = {Bichsel, Benjamin and Raychev, Veselin and Tsankov, Petar and Vechev, Martin},
 title = {Statistical Deobfuscation of Android Applications},
 booktitle = {Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security},
 series = {CCS '16},
 year = {2016},
 isbn = {978-1-4503-4139-4},
 location = {Vienna, Austria},
 pages = {343--355},
 numpages = {13},
 url = {http://doi.acm.org.eaccess.ub.tum.de/10.1145/2976749.2978422},
 doi = {10.1145/2976749.2978422},
 acmid = {2978422},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {malware inspection, program deobfuscation, reverse engineering},
}
@inproceedings{Kim:2017:TIR:3155562.3155609,
 author = {Kim, Soomin and Faerevaag, Markus and Jung, Minkyu and Jung, SeungIl and Oh, DongYeop and Lee, JongHyup and Cha, Sang Kil},
 title = {Testing Intermediate Representations for Binary Analysis},
 booktitle = {Proceedings of the 32Nd IEEE/ACM International Conference on Automated Software Engineering},
 series = {ASE 2017},
 year = {2017},
 isbn = {978-1-5386-2684-9},
 location = {Urbana-Champaign, IL, USA},
 pages = {353--364},
 numpages = {12},
 url = {http://dl.acm.org.eaccess.ub.tum.de/citation.cfm?id=3155562.3155609},
 acmid = {3155609},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
 keywords = {Binary Analysis, Binary Lifter, Binary-Based Intermediate Representation, N-version IR Testing},
} 
@inproceedings{Jaffe:2018:MVN:3196321.3196330,
 author = {Jaffe, Alan and Lacomis, Jeremy and Schwartz, Edward J. and Goues, Claire Le and Vasilescu, Bogdan},
 title = {Meaningful Variable Names for Decompiled Code: A Machine Translation Approach},
 booktitle = {Proceedings of the 26th Conference on Program Comprehension},
 series = {ICPC '18},
 year = {2018},
 isbn = {978-1-4503-5714-2},
 location = {Gothenburg, Sweden},
 pages = {20--30},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/3196321.3196330},
 doi = {10.1145/3196321.3196330},
 acmid = {3196330},
 publisher = {ACM},
 address = {New York, NY, USA},
} 
@unknown{neural-reverse-engineering,
author = {David, Yaniv and Alon, Uri and Yahav, Eran},
year = {2019},
month = {02},
pages = {},
title = {Neural Reverse Engineering of Stripped Binaries}
}
@INPROCEEDINGS{7546500, 
author={Y. {Shoshitaishvili} and R. {Wang} and C. {Salls} and N. {Stephens} and M. {Polino} and A. {Dutcher} and J. {Grosen} and S. {Feng} and C. {Hauser} and C. {Kruegel} and G. {Vigna}}, 
booktitle={2016 IEEE Symposium on Security and Privacy (SP)}, 
title={SOK: (State of) The Art of War: Offensive Techniques in Binary Analysis}, 
year={2016}, 
volume={}, 
number={}, 
pages={138-157}, 
keywords={program diagnostics;security of data;binary vulnerability analysis technique;binary code;data structure;DARPA;Computer bugs;Semantics;Security;Binary codes;Engines;Operating systems;attacks and defenses;security architectures;system security}, 
doi={10.1109/SP.2016.17}, 
ISSN={2375-1207}, 
month={May},}

@article{Caballero:2016:TIE:2891449.2896499,
 author = {Caballero, Juan and Lin, Zhiqiang},
 title = {Type Inference on Executables},
 journal = {ACM Comput. Surv.},
 issue_date = {May 2016},
 volume = {48},
 number = {4},
 month = may,
 year = {2016},
 issn = {0360-0300},
 pages = {65:1--65:35},
 articleno = {65},
 numpages = {35},
 url = {http://doi.acm.org/10.1145/2896499},
 doi = {10.1145/2896499},
 acmid = {2896499},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Type inference, binary code analysis, program executables},
}
@InProceedings{Balakrishnan10.1007/978-3-540-24723-4_2,
author="Balakrishnan, Gogul
and Reps, Thomas",
editor="Duesterwald, Evelyn",
title="Analyzing Memory Accesses in x86 Executables",
booktitle="Compiler Construction",
year="2004",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="5--23",
abstract="This paper concerns static-analysis algorithms for analyzing x86 executables. The aim of the work is to recover intermediate representations that are similar to those that can be created for a program written in a high-level language. Our goal is to perform this task for programs such as plugins, mobile code, worms, and virus-infected code. For such programs, symbol-table and debugging information is either entirely absent, or cannot be relied upon if present; hence, the technique described in the paper makes no use of symbol-table/debugging information. Instead, an analysis is carried out to recover information about the contents of memory locations and how they are manipulated by the executable.",
isbn="978-3-540-24723-4"
}
